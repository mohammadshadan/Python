a <- rbind(c(11, 12, 13, 14),
c(21, 22, 23, 24),
c(31, 32, 33, 34))
a
a <- rbind(c(11, 12, 13, 14),
c(21, 22, 23, 24),
c(31, 32, 33, 34))
a
a[2,3]
a[1,]
a[,1]
a[-2,-3]
a[,-2]
a[,1] <- 99
a
a[,1] <- c(99,98,97)
a
a[a>90] <- 90
a
t(a)
det(a)
solve(a)
a <- matrix(rep(2,9), nrow=3)
a
t(a)
det(a)
solve(a)
a <- matrix(seq(1,9), nrow=3)
a
t(a)
det(a)
solve(a)
ginv(a)
eigen(a)$values
svd(a)$d
eigen(a)$vectors
rank(a)
a
apply(a,2,sum)
apply(a,1,sum)
sum(a)
apply(a,2,cumsum)
sort(a)
t(sort(a))
apply(a,2,sort)
t(apply(a,1,sort))
order(a)
a[,4:1]
apply(a,2,max)
apply(a,1,max)
max(a)
i <- apply(a,1,which.max)
i
pmax(b,c)
apply(a,2,cummax)
a[,4:1]
a <- matrix(seq(1,16))
a
a <- matrix(seq(1,16), nrow=4)
a[,4:1]
a
a[3:1,]
kronecker(matrix(1,2,3),a)
a
a[lower.tri(a)] <- 0
a
a[upper.tri(a)] <- 0
a
dim(a)
ncol(a)
prod(dim(a))
object.size(a)
a * b
a
b
a * b
a %*% b
outer(a,b) ; a %o% b
crossprod(a,b) ; t(a) %*% b
kronecker(a,b)
solve(a,b)
which(a != 0)
which(a != 0, arr.ind=T)
ij <- which(a != 0, arr.ind=T); v <- a[ij]
ij
which(a>5.5)
ij <- which(a>5.5, arr.ind=T); v <- a[ij]
plot(a, type="l")
plot(x[,1],x[,2])
plot(x1,y1)
matplot(x2,y2,add=T)
round(5.6)
ceil(5.6)
floor(5.6)
ceil(5.6)
apply(a,2,max)
pmax(b,c)
a <- matrix(seq(1,16), nrow=4)
a
a[2]
a[[2]]
a
a[,5]
a[,2]
a[2]
a[,2:3]
a[1:2,2:3]
a[1:2,3:2]
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(4)
A<-paste(“alpha”,”beta”,”gamma”,sep=” ”)
B<- paste(“phi”,”theta”,”zeta”,sep=””)
parts<- strsplit(c(A,B),split=” ”)
parts[[1]][2]
A<-paste(“alpha”,”beta”,”gamma”,sep=” ”)
A<-paste("alpha",”beta”,”gamma”,sep=” ”)
A<-paste("alpha","beta","gamma",sep=" ")
B<- paste("phi","theta","zeta",sep="")
parts<- strsplit(c(A,B),split=" ")
parts
parts[[1]][2]
grepl("neeraj",c("dheeraj","Neeraj","neeraj","is","NEERAJ"))
install.packages("readxl")
install.packages("readxl")
library(readxl)
l <- read_excel("http://raw.texastribune.org.s3.amazonaws.com/texas_a%26m_university_system/salaries/2014-01/Hill%20-%20SO-14-003.xlsx")
l <- read_excel("http://raw.texastribune.org.s3.amazonaws.com/texas_a%26m_university_system/salaries/2014-01/Hill%20-%20SO-14-003.xlsx")
url <- "http://raw.texastribune.org.s3.amazonaws.com/texas_a%26m_university_system/salaries/2014-01/Hill%20-%20SO-14-003.xlsx"
l <- read_excel(url)
download.file(url)
getwd()
download.file(url,destfile = ./excel.xlsx)
download.file(url,destfile = ./Users/Lenovo/Documents/excel.xlsx)
download.file(url,destfile = ./Users/Lenovo/Documents/excel.xlsx, method = "curl")
training_url  <- "http://raw.texastribune.org.s3.amazonaws.com/texas_a%26m_university_system/salaries/2014-01/Hill%20-%20SO-14-003.xlsx"
data_training <- read.csv(training_url, na.strings = c("#DIV/0!", "NA",""))
head(data_training)
data_training <- read_excel(training_url, na.strings = c("#DIV/0!", "NA",""))
training_url  <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testing_url   <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_training <- read.csv(training_url, na.strings = c("#DIV/0!", "NA",""))
head(data_training)
names(head(data_training))
url <- "http://raw.texastribune.org.s3.amazonaws.com/texas_a%26m_university_system/salaries/2014-01/Hill%20-%20SO-14-003.xlsx"
download.file(url,destfile =excel.xlsx, method = "curl")
head(data_training)
names(head(data_training))
url <- "http://raw.texastribune.org.s3.amazonaws.com/texas_a%26m_university_system/salaries/2014-01/Hill%20-%20SO-14-003.xlsx"
download.file(url,destfile =excel.xlsx, method = "curl")
download.file(url,destfile="./excel.xlsx", method = "curl")
l <- read_excel(excel.xlsx)
l <- read_excel("excel.xlsx")
head(l)
class(l)
head(mtcars)
head(mtcars)
mtcars['mpg']
mtcars[1]
mtcars[1:5,1]
mtcars > 10
data()
mtcars[1]
mtcars[,1]
mtcars[1]
install.packages("leaps")
library(leaps)
head(mtcars)
regfit <- regsubsets(mpg~., data = mtcars)
summary(regfit)
step <- step(lm(mpg ~ ., mtcars), trace = 0); summary(step)
regfit <- regsubsets(mpg~., data = mtcars, nvmax = 4)
summary(regfit)
reg.summary <- summary(regfit)
plot(reg.summary$cp)
install.packages("ISLR")
library(ISLR)
data(Hitters)
step <- step(lm(Salary ~ ., Hitters), trace = 0); summary(step)
regfit <- regsubsets(mpg~., data = mtcars, nvmax = 6)
reg.summary <- summary(regfit)
plot(reg.summary$cp)
which.min(reg.summary$cp)
coef(regfit,3)
regfit <- regsubsets(mpg~., data = mtcars)
summary(regfit)
reg.summary <- summary(regfit)
plot(reg.summary$cp)
which.min(reg.summary$cp)
coef(regfit,3)
summary(step)
install.packages("swirl")
install.packages("curl")
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
qnorm(0.975)
qnorm(0.955)
qnorm(0.683)
data(sleep)
library(ggplot2)
g <- ggplot(sleep, aes(x = group, y = extra, group = factor(ID)))
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = g
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = 0.5)
g
install.packages("C50")
library(C50)
data(churn)
head(churn)
view(churn)
str(churnTrain)
churnTrain = churnTrain[,! names(churnTrain) %in% c("state",
"area_code", "account_length") ]
dim(churnTrain)
set.seed(2)
ind = sample(2, nrow(churnTrain), replace = TRUE, prob=c(0.7,
0.3))
trainset = churnTrain[ind == 1,]
sample(2,10)
sample(2)
testset = churnTrain[ind == 2,]
dim(trainset)
dim(testset)
library(rpart)
churn.rp = rpart(churn ~ ., data=trainset)
churn.rp
summary(churn.rp)
printcp(churn.rp)
plotcp(churn.rp)
summary(churn.rp)
churn.rp
churn.rp_caret <- train(churn ~ ., data=trainset,method="rpart")
library(caret)
churn.rp_caret <- train(churn ~ ., data=trainset,method="rpart")
churn.rp_caret
churn.rp
summary(churn.rp_caret)
varImp(churn.rp_caret)
churn.rp
print(modFit$churn.rp_caret)
print(churn.rp_caret$finalModel)
churn.rp_caret$finalModel
printcp(churn.rp)
churn.rp_caret
churn.rp_caret$xlevels
plot(cars)
plot(cars)
head(mtcars)
head(mtcars)
?aggregate
aggregate(mpg~cyl+gear, sum)
aggregate(mpg~cyl+gear,data=mtcars sum)
aggregate(mpg~cyl+gear,data=mtcars, sum)
aggregate(mpg~cyl+gear,data=mtcars, mean)
aggregate(mpg~cyl+gear,data=mtcars, c(mean,median))
aggregate(mpg~cyl+gear,data=mtcars,median)
?group_by
??summarize
apply(mtcars, mean)
lapply(mtcars, mean)
sapply(mtcars, mean)
apply(mtcars,2,mean)
apply(mtcars,1,mean)
library(dplyr)
group_by(mtcars,cyl)
group_by(mtcars,cyl,gear)
n(mtcars)
x = 'hello, python world!'
print(x.split(' '))
head(mtcars)
class(mtcars)
library(data.table)
m <- as.data.table(mtcars)
class(m)
str(m)
m[m$mpg>4,]
m[mpg>4]
head(m[mpg>4])
head(m[m$mpg>4,])
head(m[mpg>4])
head(m[m$mpg>4,])
head(m[mpg>4])
mtcars[mpg>4]
mtcars[mtcars$mpg>4,]
x <- "From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008"
x
grep(findall('^From:.*? (\S+@\S+)',,x)
grep(findall(\S+@\S+',,x)
grep(findall('\S+@\S+',,x)
?grep
grep(findall(\S+@\S+,,x)
?grep
x = 'From: Using the : character'
grep(findall(\S+@\S+,,x)
?grep
x = 'From: Using the : character'
grep('^F.+:', x))
grep(findall(\S+@\S+,,x)
?grep
x = 'From: Using the : character'
grep("^F.+:", x))
grep("^F.+:", x)
x[grep("^F.+:", x)]
library(ggplot2)
ggplot(mtcars, aes(wt,mpg)) + geom_point()
ggplot(mtcars, aes(wt,mpg)) + geom_point(col="red")
ggplot(mtcars, aes(wt,mpg)) + geom_point(aes(col='cyl'))
ggplot(mtcars, aes(wt,mpg)) + geom_point(aes(fill='cyl'))
ggplot(mtcars, aes(wt,mpg)) + geom_point(aes(col=cyl))
ggplot(mtcars, aes(wt,mpg)) + geom_point(aes(col=factor(cyl)))
ggplot(mtcars, aes(wt,mpg)) + geom_point()
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(.~cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(.~cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(.~cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(cyl~.)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(cyl~.)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(cyl~)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(~cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(.~cyl)
g <- ggplot(mpg, aes(displ, hwy))
g + geom_point(alpha=1/3) + facet_grid(cyl~class)
g + geom_point(alpha=1/3) + facet_wrap(cyl~class)
g + geom_point(alpha=1/3) + facet_grid(.~class)
g + geom_point(alpha=1/3) + facet_wrap(.~class)
g + geom_point(alpha=1/3) + facet_grid(.~class)
g + geom_point(alpha=1/3) + facet_grid(class~.)
g + geom_point(alpha=1/3) + facet_wrap(class~.)
g + geom_point(alpha=1/3) + facet_wrap(class~)
g + geom_point(alpha=1/3) + facet_wrap(clas)
g + geom_point(alpha=1/3) + facet_wrap(class)
g + geom_point(alpha=1/3) + facet_wrap(class~1)
g + geom_point(alpha=1/3) + facet_grid(class~.)
g + geom_point(alpha=1/3) + facet_wrap(~class,ncol=1)
g + geom_point(alpha=1/3) + facet_grid(.~class)
g + geom_point(alpha=1/3) + facet_wrap(class~,ncol=1)
g + geom_point(alpha=1/3) + facet_wrap(~class,ncol=1)
g + geom_point(alpha=1/3) + facet_wrap(~class)
g + geom_point(alpha=1/3) + facet_wrap(~class, ncol=1)
g + geom_point(alpha=1/3) + facet_wrap(~class, ncol=2)
g + geom_point(alpha=1/3) + facet_wrap(~class, ncol=2)
g + geom_point(alpha=1/3) + facet_wrap(~class, ncol=3)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(~cyl,ncol=3)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(~cyl,ncol=2)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(2~cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(.~cyl)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(cyl~,ncol=2)
ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_wrap(~cyl,ncol=1)
g + geom_point(alpha=1/3) + facet_wrap(~class, ncol=1)
head(mtcars)
mtcars[1:10]
mtcars[1:10,]
mtcars[1:10,c(1:3,5)]
data("airquality")
data(airquality)
a <- airquality
head(a)
table(is.na(a))
summary(a)
names(a)[colSums(a)>0]
names(a)[colSums(is.na(a))>0]
table(is.na(a$Ozone))
mean(a$Ozone)
mean(a$Ozone, na.rm = True)
mean(a$Ozone, na.rm = TRUE)
a$Ozone <- ifelse(is.na(a$Ozone), mean(a$Ozone, na.rm = TRUE), a$Ozone)
mean(a$Ozone, na.rm = TRUE)
a$Ozone
head(a)
a[a$Ozone==42.12931,]
a[round(a$Ozone)==42,]
nrow(a[round(a$Ozone)==42,])
e <- data.frame(f=rnorm(1000))
library(ggplot2)
e <- data.frame(f=rnorm(1000))
g <- ggplot(data=e, aes(x=f))
g <- g + geom_histogram(bins = 30)
g
g <- ggplot(data=e, aes(x=f))
g <- g + geom_histogram(bins = 30, fill="black", col="red")
g
df <- rnorm(1000)
df
g <- ggplot(data=NULL, aes(x=df))
g <- g + geom_histogram(bins = 30)
g
df <- rnorm(2000)
g <- ggplot(data=NULL, aes(x=df))
g <- g + geom_histogram(bins = 30, fill="black", col="red")
g
g <- g + geom_histogram(bins = 30, fill="white", col="red")
g
data(mtcars)
head(mtcars)
no_cyl <- data.frame(table(mtcars$cyl))
barplot(table(mtcars$cyl))
g <- ggplot(no_cyl, aes(x=Var1, y=Freq, fill = Var1))
g <- g + geom_bar(stat = "identity")
g <- g  + labs(x="No. of Cylinders", ylab="Frequency", title="Bar Plot")
g
prop.table(table(mtcars$cyl)) * 100
g <- ggplot(mtcars, aes(x=cyl))
g <- g + geom_count()
g
g <- g + geom_bar()
g
g <- ggplot(mtcars, aes(x=cyl,y=""))
g <- g + geom_bar()
g
barplot(mtcars$cyl)
library(gcookbook)
library(gcookbook)
cabbage_exp
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat = "identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat = "identity", position="dodge")
data(iris)
head(iris)
ggplot(iris, aes(x=Sepal.Lenght))+ geom_histogram(bins=30)
ggplot(iris, aes(x=Sepal.Length))+ geom_histogram(bins=30)
ggplot(iris, aes(x=Sepal.Length))+ geom_histogram(bins=30, fill="blue", col="black")
getwd()
setwd("~/GitHub/LearningPython/Datacamp/15. Supervised Learning with scikit-learn")
df <- read.table("house-votes-84.data")
head(df)
df <- read.table("house-votes-84.data", sep=",")
head(df)
df <- read.table("house-votes-84.data", sep=",", na.strings = "?")
head(df)
df[is.na(df)] <- 0
head(df)
table(is.na(df))
df[is.na(df),] <- 0
is.na(df)
df[is.na(df)] <- 0
warnings()
head(df)
col_names = c('party', 'infants', 'water', 'budget', 'physician', 'salvador',
'religious', 'satellite', 'aid', 'missile', 'immigration', 'synfuels',
'education', 'superfund', 'crime', 'duty_free_exports', 'eaa_rsa')
names(df) <- col_names
head(df)
table(is.na(df), useNA = "Always")
table(is.na(df))
df[is.na(df)] <- 0
head(df)
m <- matrix(sample(c(NA, 1:10), 100, replace = TRUE), 10)
d <- as.data.frame(m)
d[is.na(d)] <- 0
class(df)
table(is.na(df))
df <- read.table("house-votes-84.data", sep=",", na.strings = "?")
table(is.na(df))
names(df)[colSums(is.na(df))>0]
view(df)
edit(df)
df[is.na(df),] <- 0
df[is.na(df)] <- 0
class(df)
df <- read.table("house-votes-84.data", sep=",", na.strings = "?")
class(df)
col_names = c('party', 'infants', 'water', 'budget', 'physician', 'salvador',
'religious', 'satellite', 'aid', 'missile', 'immigration', 'synfuels',
'education', 'superfund', 'crime', 'duty_free_exports', 'eaa_rsa')
names(df) <- col_names
class(df)
head(df)
table(df)
mtcars[1:10]
dim(mtcars)
mtcars[1:10,]
df[is.na(df)] = 0
warnings()
df[is.na(df[,-1])] = 0
df[,-1]
df[,-1][is.na(df[,-1])] = 0
df$infants[is.na(df$infants)] <- 0
df[is.na(df)] <- '0'
df[df=='n']
df[df=='n']=0
warnings()
str(df)
df <- read.table("house-votes-84.data", sep=",", na.strings = "?", stringsAsFactors = FALSE)
str(df)
table(is.na(df))
str(df)
head(df)
class(df)
df[is.na(df)]<-0
head(df)
data(HouseVotes84)
library(mlbench)
data(HouseVotes84)
head(HouseVotes84)
mtcars[1:2,3:]
mtcars[1:2,3:5]
head(mtcars)
apply(mtcars,1, mean)
apply(mtcars,2, mean)
apply(mtcars,2, var)
